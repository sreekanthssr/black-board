{"version":3,"sources":["lib/fabric-brush.js","lib/fabric-mouse-cursor.js","component/fabric-component.js","component/main-menu-component.js","App.js","serviceWorker.js","index.js"],"names":["FabricBrush","options","canvas","_setBrushType","brushType","_setColor","color","_setSize","size","brush","this","_getBrushProp","freeDrawingBrush","fabric","width","parseInt","shadow","Shadow","blur","offsetX","offsetY","affectStroke","setColorSize","cursor","_setMouseHandler","on","e","_createCursor","pointer","_showCursor","_removeCursor","Circle","left","x","top","y","radius","stroke","strokeWidth","fill","customName","hasControls","hasBorders","selectable","add","setActiveObject","getObjects","forEach","obj","remove","renderAll","setCoords","FabricComponent","props","fabricBrush","setCanvas","Canvas","isDrawingMode","backgroundColor","freeDrawingCursor","setDimensions","height","cssOnly","getBrush","setColorSizeBrush","className","id","React","Component","MainMenuComponent","state","menuClick","bind","setColorAndSize","setBrushType","setCurrentColor","setCurrentSize","type","target","value","brushClass","setState","setCurrentBrushType","onClick","min","max","onChange","style","App","currentColor","currentSize","currentBrushType","done","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c679682a.chunk.js","sourcesContent":["import {fabric} from 'fabric';\r\nimport fabricMouseCursor from './fabric-mouse-cursor';\r\n\r\nexport default class FabricBrush extends fabricMouseCursor{\r\n    constructor(options){ \r\n        super(options);  \r\n        this.options = {};\r\n        this.options.canvas = (options.canvas) ? options.canvas : null;\r\n        this._setBrushType(options.brushType);\r\n        this._setColor(options.color);\r\n        this._setSize(options.size);        \r\n    }\r\n\r\n    getBrush(){\r\n        let brush = this._getBrushProp();\r\n        this.options.canvas.freeDrawingBrush = new fabric[brush.brushType](this.options.canvas);\r\n        \r\n        this.options.canvas.freeDrawingBrush.color = brush.color;\r\n        this.options.canvas.freeDrawingBrush.width = parseInt(this.options.size, 10) || 1;\r\n        this.options.canvas.freeDrawingBrush.shadow = new fabric.Shadow({\r\n            blur: parseInt(brush.blur, 10) || 0,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            affectStroke: true,\r\n            color: brush.color,\r\n        });\r\n    }\r\n\r\n    _setColor(color){\r\n        this.options.color = (color) ? color : '#000000';\r\n    }\r\n\r\n    _setSize(size){\r\n        this.options.size = (size) ? parseInt(size) : 5;\r\n    }\r\n    \r\n    _setBrushType(brushType){\r\n        this.options.brushType = (brushType) ? brushType : 'pen';\r\n    }\r\n\r\n    setColorSizeBrush(color, size, brushType){\r\n        this._setColor(color);\r\n        this._setSize(size);\r\n        this._setBrushType(brushType);\r\n        this.setColorSize(color, size);\r\n    }\r\n\r\n    _getBrushProp(){\r\n        /*\"BaseBrush\", \"PencilBrush\", \"CircleBrush\", \"SprayBrush\", \"PatternBrush\"*/\r\n        let brush = {};\r\n        switch(this.options.brushType){\r\n            case 'pen':\r\n                brush = {brushType : \"PencilBrush\", blur : 5, color : this.options.color};\r\n                break;\r\n            case 'pencil':\r\n                brush = {brushType : \"PencilBrush\", blur : 0, color : this.options.color};\r\n                break;\r\n            case 'brush':\r\n                brush = {brushType : \"SprayBrush\", blur : 10, color : this.options.color};\r\n                break;\r\n            case 'highlighter':\r\n                brush = {brushType : \"PencilBrush\", blur : 2, color : this.options.color+'aa'};\r\n                break;\r\n            default:\r\n                brush = {brushType : \"PencilBrush\", blur : 1, color : this.options.color};\r\n        }\r\n        return brush;\r\n    }\r\n}","import {fabric} from 'fabric';\r\n\r\nexport default class fabricMouseCursor {\r\n    constructor(options){  \r\n        this.cursor = null; \r\n        this.options = {};\r\n        this.options.canvas = (options.canvas) ? options.canvas : null;\r\n        this._setColor(options.color);\r\n        this._setSize(options.size);\r\n        this._setMouseHandler();\r\n        \r\n    }\r\n\r\n    _setColor(color){\r\n        this.options.color = (color) ? color : '#000000';\r\n    }\r\n\r\n    _setSize(size){\r\n        this.options.size = (size) ? parseInt(size) : 5;\r\n    }\r\n\r\n    setColorSize(color, size){\r\n        this._setColor(color);\r\n        this._setSize(size);\r\n    }\r\n\r\n    _setMouseHandler(){\r\n        /*this.options.canvas.on(\"mouse:down\", () =>{\r\n            this.mouseDown = true;\r\n        });\r\n        this.options.canvas.on(\"mouse:up\", () =>{\r\n            this.mouseDown = false;\r\n        });*/\r\n        this.options.canvas.on(\"mouse:move\", (e) =>{\r\n            this._createCursor(e.pointer);\r\n            this._showCursor(e.pointer);\r\n        });\r\n        /*this.options.canvas.on(\"mouse:over\", (e) =>{\r\n            this._createCursor(e.pointer);\r\n        });*/\r\n        \r\n        this.options.canvas.on(\"mouse:out\", (e) =>{\r\n            this._removeCursor(e.pointer);\r\n        });\r\n    }\r\n\r\n    _createCursor(pointer){\r\n        if(pointer && this.cursor === null){\r\n            this.cursor = new fabric.Circle({\r\n                left:pointer.x - this.options.size/2,\r\n                top:pointer.y - this.options.size/2,                \r\n                radius:this.options.size/2,\r\n                stroke:this.options.color,\r\n                strokeWidth:0,\r\n                fill:this.options.color,\r\n                customName : 'customMouseCursor',\r\n                hasControls : false,\r\n                hasBorders : false,\r\n                selectable : false\r\n            });\r\n            this.options.canvas.add(this.cursor).setActiveObject();\r\n        }\r\n        \r\n    }\r\n\r\n    _removeCursor(){\r\n        this.options.canvas.getObjects().forEach((obj) =>{\r\n            if(obj.customName === 'customMouseCursor'){\r\n                this.options.canvas.remove(obj);\r\n                this.options.canvas.renderAll();\r\n                this.cursor = null;\r\n            }\r\n        });\r\n    }\r\n    _showCursor(pointer){\r\n        this.cursor.left = pointer.x- this.options.size/2;\r\n        this.cursor.top = pointer.y - this.options.size/2;\r\n        this.cursor.setCoords();\r\n        this.options.canvas.renderAll();\r\n    }\r\n}","import React from \"react\";\r\nimport {fabric} from 'fabric';\r\nimport FabricBrush from '../lib/fabric-brush';\r\n\r\nexport default class FabricComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.fabricBrush = null;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.setCanvas(new fabric.Canvas('fabricCanvas', {\r\n            isDrawingMode: true,\r\n            backgroundColor: \"transparent\",\r\n            freeDrawingCursor : 'none'\r\n        }),(canvas) =>{\r\n           canvas.setDimensions({width: '97vw', height: '101vh'}, {cssOnly: true});\r\n           this.fabricBrush = new FabricBrush({\r\n                canvas : canvas,\r\n                color : this.props.color,\r\n                size: this.props.size,\r\n                brushType: this.props.brushType\r\n            });\r\n            this.fabricBrush.getBrush();\r\n        });\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let color = this.props.color;\r\n        let size = this.props.size;\r\n        let brushType = this.props.brushType;\r\n        if(this.fabricBrush){\r\n            this.fabricBrush.setColorSizeBrush(color, size, brushType);\r\n            this.fabricBrush.getBrush();\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"drawing-canvas-main ruled\">\r\n                <canvas id=\"fabricCanvas\" width={'600'} height={'600'}></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class MainMenuComponent extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\"brushClass\" : 'fa-pen'};\r\n        this.menuClick = this.menuClick.bind(this);\r\n        this.setColorAndSize = this.setColorAndSize.bind(this);\r\n        this.setBrushType = this.setBrushType.bind(this);        \r\n        this.setCurrentColor = this.setCurrentColor.bind(this);        \r\n        this.setCurrentSize = this.setCurrentSize.bind(this);\r\n    }\r\n\r\n    menuClick(e,type){\r\n        switch(type){\r\n\r\n        }\r\n    }    \r\n\r\n    setColorAndSize(e,size,color){\r\n        this.props.setCurrentColor(color);        \r\n        this.props.setCurrentSize(size);\r\n    }\r\n\r\n    setCurrentSize(e){             \r\n        this.props.setCurrentSize(e.target.value);\r\n    }\r\n\r\n    setCurrentColor(e){\r\n        this.props.setCurrentColor(e.target.value); \r\n    }\r\n\r\n    setBrushType(e,brush){\r\n        let brushClass = 'fa-pen';\r\n        switch(brush){\r\n            case 'pencil':\r\n                brushClass = 'fa-pencil-alt';\r\n                break;\r\n            case 'brush':\r\n                brushClass = 'fa-paint-brush';\r\n                break;               \r\n            case 'highlighter':\r\n                brushClass = 'fa-highlighter';                   \r\n                break;\r\n            default:\r\n                brushClass = 'fa-pen';\r\n        }\r\n        this.setState({brushClass});\r\n        this.props.setCurrentBrushType(brush);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-menu-container\">\r\n                <div className=\"main-menu\">\r\n                    <div><i className=\"fa fa-bars\" onClick={(e) => this.menuClick(e,'menu')}></i></div>\r\n                    <div><i className=\"fa fa-save\" onClick={(e) => this.menuClick(e,'save')}></i></div>\r\n                    <div><i className=\"fa fa-undo\" onClick={(e) => this.menuClick(e,'undo')}></i></div>\r\n                    <div><i className=\"fa fa-redo\" onClick={(e) => this.menuClick(e,'redo')}></i></div>\r\n                    <div><i className=\"fa fa-paste\" onClick={(e) => this.menuClick(e,'paste')}></i></div>\r\n                    <div><i className=\"fa fa-file\" onClick={(e) => this.menuClick(e,'new')}></i></div>\r\n                    <div><i className=\"fa fa-sliders-h\" onClick={(e) => this.menuClick(e,'setting')}></i></div>\r\n                    <div className=\"pageName\"><span>Name</span></div>\r\n                    <div><i className={`fa fa-circle fa-circle-small black ${(this.props.color === '#000' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#000')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-small red ${(this.props.color === '#F00' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#F00')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-small green ${(this.props.color === '#0F0' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#0F0')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-small blue ${(this.props.color === '#00F' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#00F')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-big cyan ${(this.props.color === '#009999' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#009999')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-big orang ${(this.props.color === '#ff6600' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#ff6600')}></i></div>\r\n                    <div><i className={`fa fa-circle fa-circle-big yellow ${(this.props.color === '#FFFF00' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#FFFF00')}></i></div>\r\n                    <div className=\"toolList\">\r\n                        <span className=\"size-span\">{this.props.size}</span>\r\n                        <ul>\r\n                            <li><input type=\"range\" value={this.props.size} className=\"size-picker\" min=\"1\" max=\"50\" onChange={(e) => this.setCurrentSize(e)}/></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"color-picker\"  style={{color:this.props.color}} type=\"color\" value={this.props.color}  onChange={(e) => this.setCurrentColor(e)}/>\r\n                    </div>\r\n                    <div className=\"toolList\">\r\n                        <i className={`fa ${this.state.brushClass}`}></i>\r\n                        <ul>\r\n                            <li><i className=\"fa fa-pen\" onClick={(e) => this.setBrushType(e,'pen')}></i><div>Pen</div></li>\r\n                            <li><i className=\"fa fa-pencil-alt\" onClick={(e) => this.setBrushType(e,'pencil')}></i><div>Pencil</div></li>\r\n                            <li><i className=\"fa fa-paint-brush\" onClick={(e) => this.setBrushType(e,'brush')}></i><div>Brush</div></li>\r\n                            <li><i className=\"fa fa-highlighter\" onClick={(e) => this.setBrushType(e,'highlighter')}></i><div>Highlighter</div></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div><i className=\"fa fa-eraser\" onClick={(e) => this.menuClick(e,'eraser')}></i></div>\r\n                    <div><i className=\"fa fa-object-group\" onClick={(e) => this.menuClick(e,'select-area')}></i></div>\r\n                    </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React from 'react';\nimport {fabric} from 'fabric';\nimport FabricComponent from './component/fabric-component';\nimport MainMenuComponent from './component/main-menu-component';\n\nimport './App.scss';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {canvas : null, currentColor : '#000', currentSize : 5,  currentBrushType : 'pen' };\n    this.setCanvas = this.setCanvas.bind(this);\n    this.setCurrentBrushType = this.setCurrentBrushType.bind(this);\n    this.setCurrentSize = this.setCurrentSize.bind(this);\n    this.setCurrentColor = this.setCurrentColor.bind(this);\n  }\n\n  setCanvas(canvas,done){\n    this.setState({\n      canvas\n    }, () =>{\n      done(this.state.canvas);\n    });\n  }\n\n  setCurrentBrushType(currentBrushType){\n    this.setState({currentBrushType});\n  }\n\n  setCurrentColor(currentColor){\n    this.setState({currentColor});\n  }\n  \n  setCurrentSize(currentSize){\n    this.setState({currentSize});\n  }\n\n\n  render(){\n    return (<div className=\"main-container\">\n      <MainMenuComponent  setCurrentBrushType = {this.setCurrentBrushType} \n                          setCurrentSize = {this.setCurrentSize} \n                          setCurrentColor = {this.setCurrentColor}\n                          color={this.state.currentColor}\n                          size={this.state.currentSize}\n      />\n      <FabricComponent  setCanvas={this.setCanvas} \n                        canvas={this.state.canvas} \n                        color={this.state.currentColor} \n                        size={this.state.currentSize} \n                        brushType = {this.state.currentBrushType}\n      />\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}