{"version":3,"sources":["lib/fabric-brush.js","lib/fabric-mouse-cursor.js","lib/fabric-operations.js","component/fabric-component.js","component/main-menu-component.js","component/image-upload-component.js","component/import-json-component.js","component/custom-modal-component.js","component/confirm-box-component.js","App.js","serviceWorker.js","index.js"],"names":["FabricBrush","options","canvas","_setBrushType","brushType","_setColor","color","_setSize","size","brush","this","_getBrushProp","freeDrawingBrush","fabric","width","parseInt","shadow","Shadow","blur","offsetX","offsetY","affectStroke","setColorSize","cursor","_setMouseHandler","on","e","_createCursor","pointer","_showCursor","_removeCursor","Circle","left","x","top","y","radius","stroke","strokeWidth","fill","customName","hasControls","hasBorders","selectable","add","setActiveObject","getObjects","forEach","obj","remove","renderAll","setCoords","FabricOperations","redoArray","type","param","_undo","_redo","_claerAll","_save","_open","object","length","lastObject","_setRedoArray","pop","push","clear","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","canvasJson","toDatalessJSON","link","document","createElement","download","_getFormatedDate","href","encodeURIComponent","JSON","stringify","click","file","reader","FileReader","onload","event","json","parse","target","result","objects","loadFromJSON","readAsText","console","log","FabricComponent","props","fabricBrush","fabricOperationsObj","drawingCanvasRef","React","createRef","setCanvas","Canvas","isDrawingMode","backgroundColor","freeDrawingCursor","setDimensions","height","cssOnly","getBrush","setCurrentState","current","setColorSizeBrush","action","importJson","currrentBGImageStyle","BGImage","background","backgroundSize","ref","className","canvasBackground","style","id","Component","MainMenuComponent","state","brushClass","menuClick","bind","setColorAndSize","setBrushType","setColor","setSize","setCanvasBackground","value","setState","html2canvas","allowTaint","foreignObjectRendering","useCORS","then","toDataURL","onClick","min","max","onChange","ImageUploadComponent","accept","htmlFor","ImportJsonComponent","customModalComponent","close","stopPropagation","nativeEvent","stopImmediatePropagation","classList","contains","closeCallBack","show","children","ConfirmBoxComponent","messgae","button1CallBack","button1","button2","button2Callback","App","showImageUploadBox","saveConfirmFlag","importJsonFlag","oldCanvasBackground","image","done","files","URL","createObjectURL","currentBGImage","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4WAGqBA,E,YACjB,WAAaC,GAAU,IAAD,8BAClB,4CAAMA,KACDA,QAAU,GACf,EAAKA,QAAQC,OAAUD,EAAQC,OAAUD,EAAQC,OAAS,KAC1D,EAAKC,cAAcF,EAAQG,WAC3B,EAAKC,UAAUJ,EAAQK,OACvB,EAAKC,SAASN,EAAQO,MANJ,E,wEAUlB,IAAMC,EAAQC,KAAKC,gBACnBD,KAAKT,QAAQC,OAAOU,iBAAmB,IAAIC,SAAOJ,EAAML,WAAWM,KAAKT,QAAQC,QAEhFQ,KAAKT,QAAQC,OAAOU,iBAAiBN,MAAQG,EAAMH,MACnDI,KAAKT,QAAQC,OAAOU,iBAAiBE,MAAQC,SAASL,KAAKT,QAAQO,KAAM,KAAO,EAChFE,KAAKT,QAAQC,OAAOU,iBAAiBI,OAAS,IAAIH,SAAOI,OAAO,CAC5DC,KAAMH,SAASN,EAAMS,KAAM,KAAO,EAClCC,QAAS,EACTC,QAAS,EACTC,cAAc,EACdf,MAAOG,EAAMH,U,gCAIVA,GACPI,KAAKT,QAAQK,MAASA,GAAU,Y,+BAG1BE,GACNE,KAAKT,QAAQO,KAAQA,EAAQO,SAASP,GAAQ,I,oCAGnCJ,GACXM,KAAKT,QAAQG,UAAaA,GAAc,Q,wCAGzBE,EAAOE,EAAMJ,GAC5BM,KAAKL,UAAUC,GACfI,KAAKH,SAASC,GACdE,KAAKP,cAAcC,GACnBM,KAAKY,aAAahB,EAAOE,K,sCAKzB,IAAIC,EAAQ,GACZ,OAAQC,KAAKT,QAAQG,WACrB,IAAK,MACDK,EAAQ,CAAEL,UAAW,cAAec,KAAM,EAAGZ,MAAOI,KAAKT,QAAQK,OACjE,MACJ,IAAK,SACDG,EAAQ,CAAEL,UAAW,cAAec,KAAM,EAAGZ,MAAOI,KAAKT,QAAQK,OACjE,MACJ,IAAK,QACDG,EAAQ,CAAEL,UAAW,aAAcc,KAAM,GAAIZ,MAAOI,KAAKT,QAAQK,OACjE,MACJ,IAAK,cACDG,EAAQ,CAAEL,UAAW,cAAec,KAAM,EAAGZ,MAAOI,KAAKT,QAAQK,MAAQ,MACzE,MACJ,QACIG,EAAQ,CAAEL,UAAW,cAAec,KAAM,EAAGZ,MAAOI,KAAKT,QAAQK,OAErE,OAAOG,M,cC/DX,WAAaR,GAAU,oBACnBS,KAAKa,OAAS,KACdb,KAAKT,QAAU,GACfS,KAAKT,QAAQC,OAAUD,EAAQC,OAAUD,EAAQC,OAAS,KAC1DQ,KAAKL,UAAUJ,EAAQK,OACvBI,KAAKH,SAASN,EAAQO,MACtBE,KAAKc,mB,sDAGElB,GACPI,KAAKT,QAAQK,MAASA,GAAU,Y,+BAG1BE,GACNE,KAAKT,QAAQO,KAAQA,EAAQO,SAASP,GAAQ,I,mCAGpCF,EAAOE,GACjBE,KAAKL,UAAUC,GACfI,KAAKH,SAASC,K,yCAGG,IAAD,OAChBE,KAAKT,QAAQC,OAAOuB,GAAG,cAAc,SAACC,GAClC,EAAKC,cAAcD,EAAEE,SACrB,EAAKC,YAAYH,EAAEE,YAEvBlB,KAAKT,QAAQC,OAAOuB,GAAG,aAAa,SAACC,GACjC,EAAKI,cAAcJ,EAAEE,c,oCAIdA,GACPA,GAA2B,OAAhBlB,KAAKa,SAChBb,KAAKa,OAAS,IAAIV,SAAOkB,OAAO,CAC5BC,KAAMJ,EAAQK,EAAIvB,KAAKT,QAAQO,KAAO,EACtC0B,IAAKN,EAAQO,EAAIzB,KAAKT,QAAQO,KAAO,EACrC4B,OAAQ1B,KAAKT,QAAQO,KAAO,EAC5B6B,OAAQ3B,KAAKT,QAAQK,MACrBgC,YAAa,EACbC,KAAM7B,KAAKT,QAAQK,MACnBkC,WAAY,oBACZC,aAAa,EACbC,YAAY,EACZC,YAAY,IAEhBjC,KAAKT,QAAQC,OAAO0C,IAAIlC,KAAKa,QAAQsB,qB,sCAI3B,IAAD,OACbnC,KAAKT,QAAQC,OAAO4C,aAAaC,SAAQ,SAACC,GACf,sBAAnBA,EAAIR,aACJ,EAAKvC,QAAQC,OAAO+C,OAAOD,GAC3B,EAAK/C,QAAQC,OAAOgD,YACpB,EAAK3B,OAAS,W,kCAKbK,GACTlB,KAAKa,OAAOS,KAAOJ,EAAQK,EAAIvB,KAAKT,QAAQO,KAAO,EACnDE,KAAKa,OAAOW,IAAMN,EAAQO,EAAIzB,KAAKT,QAAQO,KAAO,EAClDE,KAAKa,OAAO4B,YACZzC,KAAKT,QAAQC,OAAOgD,gB,MCnEPE,E,WACjB,WAAanD,GAAU,oBACnBS,KAAKa,OAAS,KACdb,KAAKT,QAAU,GACfS,KAAKT,QAAQC,OAAUD,EAAQC,OAAUD,EAAQC,OAAS,KAC1DQ,KAAK2C,UAAY,G,mDAGbC,EAAMC,GACV,OAAQD,GACR,IAAK,OACD5C,KAAK8C,QACL,MACJ,IAAK,OACD9C,KAAK+C,QACL,MACJ,IAAK,MACD/C,KAAKgD,YACL,MACJ,IAAK,OACDhD,KAAKiD,QACL,MACJ,IAAK,OACDjD,KAAKkD,MAAML,M,8BAOf,IAAMM,EAASnD,KAAKT,QAAQC,OAAO4C,aACnC,GAAIe,GAAUA,EAAOC,OAAQ,CACzB,IAAMC,EAAaF,EAAOA,EAAOC,OAAS,GAC1CpD,KAAKsD,cAAcD,GACnBrD,KAAKT,QAAQC,OAAO+C,OAAOc,M,8BAK3BrD,KAAK2C,WAAa3C,KAAK2C,UAAUS,SACjCpD,KAAKT,QAAQC,OAAO0C,IAAIlC,KAAK2C,UAAUY,OACvCvD,KAAKT,QAAQC,OAAOgD,e,oCAIbW,GACXnD,KAAK2C,UAAUa,KAAKL,K,kCAIhBnD,KAAKT,QAAQC,SACbQ,KAAK2C,UAAUS,OAAS,EACxBpD,KAAKT,QAAQC,OAAOiE,W,yCAKxB,IAAMC,EAAO,IAAIC,KACjB,MAAM,GAAN,OAAUD,EAAKE,UAAf,YAA4BF,EAAKG,WAAa,EAA9C,YAAmDH,EAAKI,cAAxD,YAAyEJ,EAAKK,WAA9E,YAA4FL,EAAKM,aAAjG,YAAiHN,EAAKO,gB,8BAItH,GAAIjE,KAAKT,QAAQC,QAAUQ,KAAKT,QAAQC,OAAO4C,aAAagB,OAAQ,CAChE,IAAMc,EAAalE,KAAKT,QAAQC,OAAO2E,iBACjCC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAL,mBAA4BvE,KAAKwE,mBAAjC,SACAJ,EAAKK,KAAO,gCAAkCC,mBAAmBC,KAAKC,UAAUV,IAChFE,EAAKS,W,4BAINC,GAAO,IAAD,OACT,GAAI9E,KAAKT,QAAQC,QAAUsF,EAAM,CAC7B9E,KAAKgD,YACL,IACI,IAAM+B,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACb,IAAMC,EAAOR,KAAKS,MAAMF,EAAMG,OAAOC,QACjCH,EAAKI,SACL,EAAKhG,QAAQC,OAAOgG,aAAaL,GAAM,SAAC7C,GACpC,EAAK/C,QAAQC,OAAOgD,gBAIhCuC,EAAOU,WAAWX,GACpB,MAAO9D,GACL0E,QAAQC,IAAI3E,S,KCjFP4E,E,YACjB,WAAaC,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,YAAc,KACnB,EAAKC,oBAAsB,KAC3B,EAAKC,iBAAmBC,IAAMC,YAJd,E,iFAOE,IAAD,OACjBlG,KAAK6F,MAAMM,UAAU,IAAIhG,SAAOiG,OAAO,eAAgB,CACnDC,eAAe,EACfC,gBAAiB,cACjBC,kBAAmB,UACnB,SAAC/G,GACDA,EAAOgH,cAAc,CAAEpG,MAAO,OAAQqG,OAAQ,SAAW,CAAEC,SAAS,IACpE,EAAKZ,YAAc,IAAIxG,EAAY,CAC/BE,OAAQA,EACRI,MAAO,EAAKiG,MAAMjG,MAClBE,KAAM,EAAK+F,MAAM/F,KACjBJ,UAAW,EAAKmG,MAAMnG,YAE1B,EAAKoG,YAAYa,WACjB,EAAKZ,oBAAsB,IAAIrD,EAAiB,CAAElD,OAAQA,OAE9DQ,KAAK6F,MAAMe,gBAAgB,CAAEZ,iBAAkBhG,KAAKgG,iBAAiBa,Y,2CAIrE,IAAMjH,EAAQI,KAAK6F,MAAMjG,MACnBE,EAAOE,KAAK6F,MAAM/F,KAClBJ,EAAYM,KAAK6F,MAAMnG,UACzBM,KAAK8F,cACL9F,KAAK8F,YAAYgB,kBAAkBlH,EAAOE,EAAMJ,GAChDM,KAAK8F,YAAYa,YAEjB3G,KAAK+F,qBACL/F,KAAK+F,oBAAoBgB,OAAO/G,KAAK6F,MAAMkB,OAAQ/G,KAAK6F,MAAMmB,c,+BAKlE,IAAMC,EAAuB,GAK7B,OAJIjH,KAAK6F,MAAMqB,UACXD,EAAqBE,WAArB,eAA0CnH,KAAK6F,MAAMqB,QAArD,8BACAD,EAAqBG,eAAiB,WAGtC,yBAAKC,IAAKrH,KAAKgG,iBAAkBsB,UAAS,8BAAyBtH,KAAK6F,MAAM0B,kBAAoBC,MAAOP,GACrG,4BAAQQ,GAAG,eAAerH,MAAO,MAAOqG,OAAQ,a,GAhDnBR,IAAMyB,W,iBCF9BC,E,YACjB,WAAa9B,GAAQ,IAAD,8BAChB,4CAAMA,KACD+B,MAAQ,CAAEC,WAAY,UAC3B,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBAChB,EAAKI,QAAU,EAAKA,QAAQJ,KAAb,gBACf,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBARX,E,uEAWT/G,EAAG4B,GACV5C,KAAK6F,MAAMe,gBAAgB,CAAEG,OAAQnE,M,sCAGxB5B,EAAGlB,EAAMF,GACtBI,KAAK6F,MAAMe,gBAAgB,CAAE9G,OAAMF,Y,8BAG9BoB,GACLhB,KAAK6F,MAAMe,gBAAgB,CAAE9G,KAAMkB,EAAEqE,OAAOgD,U,+BAGtCrH,GACNhB,KAAK6F,MAAMe,gBAAgB,CAAEhH,MAAOoB,EAAEqE,OAAOgD,U,mCAGnCrH,EAAGjB,GACb,IAAI8H,EAAa,SACjB,OAAQ9H,GACR,IAAK,SACD8H,EAAa,gBACb,MACJ,IAAK,QACDA,EAAa,iBACb,MACJ,IAAK,cACDA,EAAa,iBACb,MACJ,QACIA,EAAa,SAEjB7H,KAAKsI,SAAS,CAAET,eAChB7H,KAAK6F,MAAMe,gBAAgB,CAAElH,UAAWK,M,0CAGvBiB,EAAGuG,GACpBvH,KAAK6F,MAAMe,gBAAgB,CAAEW,uB,iCAI7BgB,IAAYvI,KAAK6F,MAAMG,iBACnB,CACIwC,YAAY,EACZC,wBAAwB,EACxBC,SAAS,EACTpC,gBAAiB,OAEpBqC,MAAK,SAACnJ,GACH,IAAM4E,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAW,eAChBH,EAAKK,KAAOjF,EAAOoJ,UAAU,aAC7BxE,EAAKS,a,+BAIN,IAAD,OACN,OACI,yBAAKyC,UAAU,uBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,eACb,4BACI,4BAAI,uBAAGA,UAAS,2BAAuD,UAAhCtH,KAAK6F,MAAM0B,iBAAgC,eAAiB,IAAMsB,QAAS,SAAC7H,GAAD,OAAO,EAAKoH,oBAAoBpH,EAAG,YAAc,6CACnK,4BAAI,uBAAGsG,UAAS,2BAAuD,UAAhCtH,KAAK6F,MAAM0B,iBAAgC,eAAiB,IAAMsB,QAAS,SAAC7H,GAAD,OAAO,EAAKoH,oBAAoBpH,EAAG,YAAc,6CACnK,4BAAI,uBAAGsG,UAAS,+BAA2D,cAAhCtH,KAAK6F,MAAM0B,iBAAoC,eAAiB,IAAMsB,QAAS,SAAC7H,GAAD,OAAO,EAAKoH,oBAAoBpH,EAAG,gBAAkB,iDAC/K,4BAAI,uBAAGsG,UAAS,0BAAsD,SAAhCtH,KAAK6F,MAAM0B,iBAA+B,eAAiB,IAAMsB,QAAS,SAAC7H,GAAD,OAAO,EAAKoH,oBAAoBpH,EAAG,WAAa,4CAChK,4BAAI,uBAAGsG,UAAS,sBAAkD,UAAhCtH,KAAK6F,MAAM0B,iBAAgC,eAAiB,IAAMsB,QAAS,SAAC7H,GAAD,OAAO,EAAKoH,oBAAoBpH,EAAG,YAAc,gDAGtK,6BAAK,uBAAGsG,UAAU,aAAauB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,mBACjE,6BAAK,uBAAGsG,UAAU,aAAauB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,YACjE,6BAAK,uBAAGsG,UAAU,oBAAoBuB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,YACxE,6BAAK,uBAAGsG,UAAU,iBAAiBuB,QAAS,SAAC7H,GAAD,OAAO,EAAKuD,SAASvD,EAAG,gBACpE,6BAAK,uBAAGsG,UAAU,aAAauB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,YACjE,6BAAK,uBAAGsG,UAAU,aAAauB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,YAGjE,yBAAKsG,UAAU,YAAW,2CAC1B,6BAAK,uBAAGA,UAAS,6CAA8D,YAArBtH,KAAK6F,MAAMjG,OAA2C,MAApBI,KAAK6F,MAAM/F,KAAgB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,IAAK,eACrL,6BAAK,uBAAGsG,UAAS,2CAA4D,SAArBtH,KAAK6F,MAAMjG,OAAwC,MAApBI,KAAK6F,MAAM/F,KAAgB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,IAAK,YAChL,6BAAK,uBAAGsG,UAAS,6CAA8D,SAArBtH,KAAK6F,MAAMjG,OAAwC,MAApBI,KAAK6F,MAAM/F,KAAgB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,IAAK,YAClL,6BAAK,uBAAGsG,UAAS,4CAA6D,SAArBtH,KAAK6F,MAAMjG,OAAwC,MAApBI,KAAK6F,MAAM/F,KAAgB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,IAAK,YACjL,6BAAK,uBAAGsG,UAAS,0CAA2D,YAArBtH,KAAK6F,MAAMjG,OAA2C,OAApBI,KAAK6F,MAAM/F,KAAiB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,KAAM,eACpL,6BAAK,uBAAGsG,UAAS,2CAA4D,YAArBtH,KAAK6F,MAAMjG,OAA2C,OAApBI,KAAK6F,MAAM/F,KAAiB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,KAAM,eACrL,6BAAK,uBAAGsG,UAAS,4CAA6D,YAArBtH,KAAK6F,MAAMjG,OAA2C,OAApBI,KAAK6F,MAAM/F,KAAiB,SAAW,IAAM+I,QAAS,SAAC7H,GAAD,OAAO,EAAKgH,gBAAgBhH,EAAG,KAAM,eACtL,yBAAKsG,UAAU,YACX,0BAAMA,UAAU,aAAatH,KAAK6F,MAAM/F,MACxC,4BACI,4BAAI,2BAAO8C,KAAK,QAAQyF,MAAOrI,KAAK6F,MAAM/F,KAAMwH,UAAU,cAAcwB,IAAI,IAAIC,IAAI,KAAKC,SAAU,SAAChI,GAAD,OAAO,EAAKmH,QAAQnH,SAG/H,6BACI,2BAAOsG,UAAU,eAAeE,MAAO,CAAE5H,MAAOI,KAAK6F,MAAMjG,OAASgD,KAAK,QAAQyF,MAAOrI,KAAK6F,MAAMjG,MAAOoJ,SAAU,SAAChI,GAAD,OAAO,EAAKkH,SAASlH,OAE7I,yBAAKsG,UAAU,YACX,uBAAGA,UAAS,aAAQtH,KAAK4H,MAAMC,cAC/B,4BACI,4BAAI,uBAAGP,UAAU,YAAYuB,QAAS,SAAC7H,GAAD,OAAO,EAAKiH,aAAajH,EAAG,UAAY,qCAC9E,4BAAI,uBAAGsG,UAAU,mBAAmBuB,QAAS,SAAC7H,GAAD,OAAO,EAAKiH,aAAajH,EAAG,aAAe,wCACxF,4BAAI,uBAAGsG,UAAU,oBAAoBuB,QAAS,SAAC7H,GAAD,OAAO,EAAKiH,aAAajH,EAAG,YAAc,uCACxF,4BAAI,uBAAGsG,UAAU,oBAAoBuB,QAAS,SAAC7H,GAAD,OAAO,EAAKiH,aAAajH,EAAG,kBAAoB,+CAGtG,6BAAK,uBAAGsG,UAAU,eAAeuB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,cACnE,6BAAK,uBAAGsG,UAAU,qBAAqBuB,QAAS,SAAC7H,GAAD,OAAO,EAAK8G,UAAU9G,EAAG,yB,GApH9CiF,IAAMyB,WCDhCuB,E,iLACN,IAAD,OACN,OAAQ,yBAAK3B,UAAU,eACnB,2BAAOG,GAAG,wBAAwBuB,SAAU,SAAChI,GAAD,OAAO,EAAK6E,MAAMe,gBAAgB,CAAEM,QAASlG,KAAM4B,KAAK,OAAOsG,OAAO,UAAU5B,UAAU,SACtI,2BAAO6B,QAAQ,yBAAf,qB,GAJsClD,IAAMyB,WCAnC0B,E,iLACN,IAAD,OACN,OAAQ,yBAAK9B,UAAU,eACnB,2BAAOG,GAAG,kBAAkBuB,SAAU,SAAChI,GAAD,OAAO,EAAK6E,MAAMe,gBAAgB,CAAEI,WAAYhG,KAAM4B,KAAK,OAAOsG,OAAO,mBAAmB5B,UAAU,SAC5I,2BAAO6B,QAAQ,mBAAf,yB,GAJqClD,IAAMyB,WCAlC2B,E,YACjB,WAAaxD,GAAQ,IAAD,8BAChB,4CAAMA,KACDyD,MAAQ,EAAKA,MAAMvB,KAAX,gBAFG,E,mEAKb/G,GACHA,EAAEuI,kBACFvI,EAAEwI,YAAYC,2BACVzI,EAAEqE,OAAOqE,UAAUC,SAAS,cAC5B3J,KAAK6F,MAAM+D,cAAc,Q,+BAItB,IAAD,OACN,OAAI5J,KAAK6F,MAAMgE,KACH,yBAAKvC,UAAU,YAAYuB,QAAS,SAAC7H,GAAD,OAAO,EAAKsI,MAAMtI,KAC1D,yBAAKsG,UAAU,kBACVtH,KAAK6F,MAAMiE,WAIb,O,GAtB+B7D,IAAMyB,WCAnCqC,E,iLAEb,OAAQ,yBAAKzC,UAAU,IACnB,6BAAOtH,KAAK6F,MAAMmE,QAAWhK,KAAK6F,MAAMmE,QAAU,gBAClD,6BACI,4BAAQnB,QAAS7I,KAAK6F,MAAMoE,gBAAkBjK,KAAK6F,MAAMoE,gBAAkB,cACtEjK,KAAK6F,MAAMqE,QAAUlK,KAAK6F,MAAMqE,QAAU,MAG1ClK,KAAK6F,MAAMsE,SAAY,4BAAQtB,QAAS7I,KAAK6F,MAAMuE,gBAAkBpK,KAAK6F,MAAMuE,gBAAkB,cAC9FpK,KAAK6F,MAAMsE,e,GAValE,IAAMyB,WCsHxC2C,E,YA7GX,WAAaxE,GAAQ,IAAD,8BAChB,4CAAMA,KACD+B,MAAQ,CAAEpI,OAAQ,KAAMI,MAAO,UAAWE,KAAM,EAAGJ,UAAW,MAAO6H,iBAAkB,QAASL,QAAS,GAAIoD,oBAAoB,EAAOtE,iBAAkB,KAAMe,OAAQ,KAAMwD,iBAAiB,EAAOC,gBAAgB,EAAOxD,WAAY,MAE9O,EAAKJ,gBAAkB,EAAKA,gBAAgBmB,KAArB,gBACvB,EAAK5B,UAAY,EAAKA,UAAU4B,KAAf,gBACjB,EAAK0C,oBAAsB,CAAEC,MAAO,GAAI9H,KAAM,SAN9B,E,uEASTpD,EAAQmL,GAAO,IAAD,OACrB3K,KAAKsI,SAAS,CACV9I,WACD,WACCmL,EAAK,EAAK/C,MAAMpI,a,sCAIPqD,GACb,GAAIA,EACA,GAAIA,EAAMkE,OAEN,OADA/G,KAAKsI,SAAS,CAAEiC,iBAAiB,EAAOxD,OAAQ,OACxClE,EAAMkE,QACd,IAAK,cACD/G,KAAKsI,SAAS,CAAEiC,iBAAiB,IACjC,MACJ,IAAK,MACDvK,KAAKsI,SAAS,CAAEvB,OAAQ,MAAOwD,iBAAiB,IAChD,MACJ,IAAK,OACDvK,KAAKsI,SAAS,CAAEkC,gBAAgB,IAChC,MACJ,IAAK,cACDxK,KAAKsI,SAAS,CAAEvB,OAAQ,KAAMwD,iBAAiB,IAC/C,MACJ,QACIvK,KAAKsI,SAASzF,QAEXA,EAAMmE,WACTnE,EAAMmE,YAAcnE,EAAMmE,WAAW3B,QAAUxC,EAAMmE,WAAW3B,OAAOuF,MACvE5K,KAAKsI,SAAS,CAAEtB,WAAYnE,EAAMmE,WAAW3B,OAAOuF,MAAM,GAAIJ,gBAAgB,EAAOzD,OAAQ,SAE7F/G,KAAKsI,SAAS,CAAEkC,gBAAgB,IAE7B3H,EAAM0E,kBACbvH,KAAKyK,oBAAoB7H,KAAO5C,KAAK4H,MAAML,iBAC3CvH,KAAKsI,SAASzF,GACiB,UAA3BA,EAAM0E,iBACNvH,KAAKsI,SAAS,CAAEgC,oBAAoB,IAEpCtK,KAAKsI,SAAS,CAAEpB,QAAS,QAEtBrE,EAAMqE,SACblH,KAAKyK,oBAAoBC,MAAQ1K,KAAK4H,MAAMV,QACxCrE,EAAMqE,SAAWrE,EAAMqE,QAAQ7B,QAAUxC,EAAMqE,QAAQ7B,OAAOuF,MAC9D5K,KAAKsI,SAAS,CAAEpB,QAAS2D,IAAIC,gBAAgBjI,EAAMqE,QAAQ7B,OAAOuF,MAAM,IAAKN,oBAAoB,IAEjGtK,KAAKsI,SAAS,CAAEpB,QAASlH,KAAKyK,oBAAoBC,MAAOnD,iBAAkBvH,KAAKyK,oBAAoB7H,KAAM0H,oBAAoB,MAGlI5E,QAAQC,IAAI9C,GACZ7C,KAAKsI,SAASzF,M,2CAMtB,OAAQ7C,KAAK4H,MAAMpI,QAAUQ,KAAK4H,MAAMpI,OAAO4C,aAAagB,OAAS,I,+BAG9D,IAAD,SACN,OAAQ,yBAAKkE,UAAU,kBACnB,kBAAC,EAAD,CAAmBV,gBAAmB5G,KAAK4G,gBACvCW,iBAAkBvH,KAAK4H,MAAML,iBAC7BvB,iBAAoBhG,KAAK4H,MAAM5B,iBAC/BpG,MAAOI,KAAK4H,MAAMhI,MAClBE,KAAME,KAAK4H,MAAM9H,OAGrB,kBAAC,GAAD,GAAiBqG,UAAWnG,KAAKmG,UAC7BS,gBAAmB5G,KAAK4G,gBACxBpH,OAAQQ,KAAK4H,MAAMpI,OACnBI,MAAOI,KAAK4H,MAAMhI,MAClBE,KAAME,KAAK4H,MAAM9H,KACjBJ,UAAaM,KAAK4H,MAAMlI,UACxB6H,iBAAkBvH,KAAK4H,MAAML,iBAC7BwD,eAAkB/K,KAAK4H,MAAMV,QAC7BH,OAAU/G,KAAK4H,MAAMb,QARzB,0BASiB/G,KAAK4H,MAAMlI,WAT5B,iCAUsBM,KAAK4H,MAAML,kBAVjC,wBAWevH,KAAK4H,MAAMV,SAX1B,uBAYclH,KAAK4H,MAAMb,QAZzB,2BAakB/G,KAAK4H,MAAMZ,YAb7B,IAgBA,kBAAC,EAAD,CAAsB6C,KAAM7J,KAAK4H,MAAM0C,mBAAoBV,cAAiB,SAAC/G,GAAD,OAAW,EAAK+D,gBAAgB,CAAE0D,mBAAoBzH,MAC9H,kBAAC,EAAD,CAAsB+D,gBAAmB5G,KAAK4G,mBAGlD,kBAAC,EAAD,CAAsBiD,KAAM7J,KAAK4H,MAAM4C,eAAgBZ,cAAiB,SAAC/G,GAAD,OAAW,EAAK+D,gBAAgB,CAAE4D,eAAgB3H,MACtH,kBAAC,EAAD,CAAqB+D,gBAAmB5G,KAAK4G,mBAGjD,kBAAC,EAAD,CAAsBiD,KAAM7J,KAAK4H,MAAM2C,gBAAiBX,cAAiB,kBAAM,EAAKhD,gBAAgB,CAAE2D,iBAAiB,MACnH,kBAAC,EAAD,CAAqBP,QAAQ,wCAAwCE,QAAQ,MAAMC,QAAQ,KAAKF,gBAAiB,kBAAM,EAAKrD,gBAAgB,CAAEG,OAAQ,SAAUqD,gBAAiB,kBAAM,EAAKxD,gBAAgB,CAAEG,OAAQ,yB,GAxGpNd,IAAMyB,WCEJsD,QACU,cAA7BC,OAAOC,SAASC,UAEgB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2DCZLC,IAASC,OAAO,kBAAC,EAAD,MAASjH,SAASkH,eAAe,SD2H5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAM/C,MAAK,SAAAgD,GAClCA,EAAaC,kB","file":"static/js/main.dcb0b298.chunk.js","sourcesContent":["import { fabric } from 'fabric';\nimport fabricMouseCursor from './fabric-mouse-cursor';\n\nexport default class FabricBrush extends fabricMouseCursor {\n    constructor (options) {\n        super(options);\n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this._setBrushType(options.brushType);\n        this._setColor(options.color);\n        this._setSize(options.size);\n    }\n\n    getBrush () {\n        const brush = this._getBrushProp();\n        this.options.canvas.freeDrawingBrush = new fabric[brush.brushType](this.options.canvas);\n\n        this.options.canvas.freeDrawingBrush.color = brush.color;\n        this.options.canvas.freeDrawingBrush.width = parseInt(this.options.size, 10) || 1;\n        this.options.canvas.freeDrawingBrush.shadow = new fabric.Shadow({\n            blur: parseInt(brush.blur, 10) || 0,\n            offsetX: 0,\n            offsetY: 0,\n            affectStroke: true,\n            color: brush.color\n        });\n    }\n\n    _setColor (color) {\n        this.options.color = (color) || '#000000';\n    }\n\n    _setSize (size) {\n        this.options.size = (size) ? parseInt(size) : 5;\n    }\n\n    _setBrushType (brushType) {\n        this.options.brushType = (brushType) || 'pen';\n    }\n\n    setColorSizeBrush (color, size, brushType) {\n        this._setColor(color);\n        this._setSize(size);\n        this._setBrushType(brushType);\n        this.setColorSize(color, size);\n    }\n\n    _getBrushProp () {\n    /* \"BaseBrush\", \"PencilBrush\", \"CircleBrush\", \"SprayBrush\", \"PatternBrush\" */\n        let brush = {};\n        switch (this.options.brushType) {\n        case 'pen':\n            brush = { brushType: 'PencilBrush', blur: 5, color: this.options.color };\n            break;\n        case 'pencil':\n            brush = { brushType: 'PencilBrush', blur: 0, color: this.options.color };\n            break;\n        case 'brush':\n            brush = { brushType: 'SprayBrush', blur: 10, color: this.options.color };\n            break;\n        case 'highlighter':\n            brush = { brushType: 'PencilBrush', blur: 2, color: this.options.color + 'aa' };\n            break;\n        default:\n            brush = { brushType: 'PencilBrush', blur: 1, color: this.options.color };\n        }\n        return brush;\n    }\n}\n","import { fabric } from 'fabric';\n\nexport default class fabricMouseCursor {\n    constructor (options) {\n        this.cursor = null;\n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this._setColor(options.color);\n        this._setSize(options.size);\n        this._setMouseHandler();\n    }\n\n    _setColor (color) {\n        this.options.color = (color) || '#000000';\n    }\n\n    _setSize (size) {\n        this.options.size = (size) ? parseInt(size) : 5;\n    }\n\n    setColorSize (color, size) {\n        this._setColor(color);\n        this._setSize(size);\n    }\n\n    _setMouseHandler () {\n        this.options.canvas.on('mouse:move', (e) => {\n            this._createCursor(e.pointer);\n            this._showCursor(e.pointer);\n        });\n        this.options.canvas.on('mouse:out', (e) => {\n            this._removeCursor(e.pointer);\n        });\n    }\n\n    _createCursor (pointer) {\n        if (pointer && this.cursor === null) {\n            this.cursor = new fabric.Circle({\n                left: pointer.x - this.options.size / 2,\n                top: pointer.y - this.options.size / 2,\n                radius: this.options.size / 2,\n                stroke: this.options.color,\n                strokeWidth: 0,\n                fill: this.options.color,\n                customName: 'customMouseCursor',\n                hasControls: false,\n                hasBorders: false,\n                selectable: false\n            });\n            this.options.canvas.add(this.cursor).setActiveObject();\n        }\n    }\n\n    _removeCursor () {\n        this.options.canvas.getObjects().forEach((obj) => {\n            if (obj.customName === 'customMouseCursor') {\n                this.options.canvas.remove(obj);\n                this.options.canvas.renderAll();\n                this.cursor = null;\n            }\n        });\n    }\n\n    _showCursor (pointer) {\n        this.cursor.left = pointer.x - this.options.size / 2;\n        this.cursor.top = pointer.y - this.options.size / 2;\n        this.cursor.setCoords();\n        this.options.canvas.renderAll();\n    }\n}\n","export default class FabricOperations {\n    constructor (options) {\n        this.cursor = null;\n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this.redoArray = [];\n    }\n\n    action (type, param) {\n        switch (type) {\n        case 'undo':\n            this._undo();\n            break;\n        case 'redo':\n            this._redo();\n            break;\n        case 'new':\n            this._claerAll();\n            break;\n        case 'save':\n            this._save();\n            break;\n        case 'open':\n            this._open(param);\n            break;\n        default:\n        }\n    }\n\n    _undo () {\n        const object = this.options.canvas.getObjects();\n        if (object && object.length) {\n            const lastObject = object[object.length - 1];\n            this._setRedoArray(lastObject);\n            this.options.canvas.remove(lastObject);\n        }\n    }\n\n    _redo () {\n        if (this.redoArray && this.redoArray.length) {\n            this.options.canvas.add(this.redoArray.pop());\n            this.options.canvas.renderAll();\n        }\n    }\n\n    _setRedoArray (object) {\n        this.redoArray.push(object);\n    }\n\n    _claerAll () {\n        if (this.options.canvas) {\n            this.redoArray.length = 0;\n            this.options.canvas.clear();\n        }\n    }\n\n    _getFormatedDate () {\n        const date = new Date();\n        return `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}-${date.getHours()}-${date.getMinutes()}-${date.getSeconds()}`;\n    }\n\n    _save () {\n        if (this.options.canvas && this.options.canvas.getObjects().length) {\n            const canvasJson = this.options.canvas.toDatalessJSON();\n            const link = document.createElement('a');\n            link.download = `Notebook-${this._getFormatedDate()}.json`;\n            link.href = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(canvasJson));\n            link.click();\n        }\n    }\n\n    _open (file) {\n        if (this.options.canvas && file) {\n            this._claerAll();\n            try {\n                const reader = new FileReader();\n                reader.onload = (event) => {\n                    const json = JSON.parse(event.target.result);\n                    if (json.objects) {\n                        this.options.canvas.loadFromJSON(json, (obj) => {\n                            this.options.canvas.renderAll();\n                        });\n                    }\n                };\n                reader.readAsText(file);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }\n}\n","import React from 'react';\nimport { fabric } from 'fabric';\nimport FabricBrush from '../lib/fabric-brush';\nimport FabricOperations from '../lib/fabric-operations';\n\nexport default class FabricComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        this.fabricBrush = null;\n        this.fabricOperationsObj = null;\n        this.drawingCanvasRef = React.createRef();\n    }\n\n    componentDidMount () {\n        this.props.setCanvas(new fabric.Canvas('fabricCanvas', {\n            isDrawingMode: true,\n            backgroundColor: 'transparent',\n            freeDrawingCursor: 'none'\n        }), (canvas) => {\n            canvas.setDimensions({ width: '97vw', height: '101vh' }, { cssOnly: true });\n            this.fabricBrush = new FabricBrush({\n                canvas: canvas,\n                color: this.props.color,\n                size: this.props.size,\n                brushType: this.props.brushType\n            });\n            this.fabricBrush.getBrush();\n            this.fabricOperationsObj = new FabricOperations({ canvas: canvas });\n        });\n        this.props.setCurrentState({ drawingCanvasRef: this.drawingCanvasRef.current });\n    }\n\n    componentDidUpdate () {\n        const color = this.props.color;\n        const size = this.props.size;\n        const brushType = this.props.brushType;\n        if (this.fabricBrush) {\n            this.fabricBrush.setColorSizeBrush(color, size, brushType);\n            this.fabricBrush.getBrush();\n        }\n        if (this.fabricOperationsObj) {\n            this.fabricOperationsObj.action(this.props.action, this.props.importJson);\n        }\n    }\n\n    render () {\n        const currrentBGImageStyle = {};\n        if (this.props.BGImage) {\n            currrentBGImageStyle.background = `url('${this.props.BGImage}') no-repeat center center`;\n            currrentBGImageStyle.backgroundSize = 'contain';\n        }\n        return (\n            <div ref={this.drawingCanvasRef} className={`drawing-canvas-main ${this.props.canvasBackground}`} style={currrentBGImageStyle}>\n                <canvas id=\"fabricCanvas\" width={'600'} height={'600'}></canvas>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport html2canvas from 'html2canvas';\n\nexport default class MainMenuComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { brushClass: 'fa-pen' };\n        this.menuClick = this.menuClick.bind(this);\n        this.setColorAndSize = this.setColorAndSize.bind(this);\n        this.setBrushType = this.setBrushType.bind(this);\n        this.setColor = this.setColor.bind(this);\n        this.setSize = this.setSize.bind(this);\n        this.setCanvasBackground = this.setCanvasBackground.bind(this);\n    }\n\n    menuClick (e, type) {\n        this.props.setCurrentState({ action: type });\n    }\n\n    setColorAndSize (e, size, color) {\n        this.props.setCurrentState({ size, color });\n    }\n\n    setSize (e) {\n        this.props.setCurrentState({ size: e.target.value });\n    }\n\n    setColor (e) {\n        this.props.setCurrentState({ color: e.target.value });\n    }\n\n    setBrushType (e, brush) {\n        let brushClass = 'fa-pen';\n        switch (brush) {\n        case 'pencil':\n            brushClass = 'fa-pencil-alt';\n            break;\n        case 'brush':\n            brushClass = 'fa-paint-brush';\n            break;\n        case 'highlighter':\n            brushClass = 'fa-highlighter';\n            break;\n        default:\n            brushClass = 'fa-pen';\n        }\n        this.setState({ brushClass });\n        this.props.setCurrentState({ brushType: brush });\n    }\n\n    setCanvasBackground (e, canvasBackground) {\n        this.props.setCurrentState({ canvasBackground });\n    }\n\n    download () {\n        html2canvas(this.props.drawingCanvasRef,\n            {\n                allowTaint: true,\n                foreignObjectRendering: true,\n                useCORS: true,\n                backgroundColor: null\n            })\n            .then((canvas) => {\n                const link = document.createElement('a');\n                link.download = 'Notebook.png';\n                link.href = canvas.toDataURL('image/png');\n                link.click();\n            });\n    }\n\n    render () {\n        return (\n            <div className=\"main-menu-container\">\n                <div className=\"main-menu\">\n                    <div className=\"toolList\">\n                        <i className=\"fa fa-bars\"></i>\n                        <ul>\n                            <li><i className={`paper-white-icon ${(this.props.canvasBackground === 'white') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e, 'white')}></i><div>White paper</div></li>\n                            <li><i className={`paper-ruled-icon ${(this.props.canvasBackground === 'ruled') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e, 'ruled')}></i><div>Ruled paper</div></li>\n                            <li><i className={`paper-landscape-icon ${(this.props.canvasBackground === 'landscape') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e, 'landscape')}></i><div>Landscape paper</div></li>\n                            <li><i className={`paper-gird-icon ${(this.props.canvasBackground === 'gird') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e, 'grid')}></i><div>Grid paper</div></li>\n                            <li><i className={`fa fa-image ${(this.props.canvasBackground === 'image') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e, 'image')}></i><div>Custom Image</div></li>\n                        </ul>\n                    </div>\n                    <div><i className=\"fa fa-file\" onClick={(e) => this.menuClick(e, 'new-confirm')}></i></div>\n                    <div><i className=\"fa fa-save\" onClick={(e) => this.menuClick(e, 'save')}></i></div>\n                    <div><i className=\"fa fa-file-import\" onClick={(e) => this.menuClick(e, 'open')}></i></div>\n                    <div><i className=\"fa fa-download\" onClick={(e) => this.download(e, 'download')}></i></div>\n                    <div><i className=\"fa fa-undo\" onClick={(e) => this.menuClick(e, 'undo')}></i></div>\n                    <div><i className=\"fa fa-redo\" onClick={(e) => this.menuClick(e, 'redo')}></i></div>\n                    {/* <div><i className=\"fa fa-paste\" onClick={(e) => this.menuClick(e,'paste')}></i></div>\n                     <div><i className=\"fa fa-sliders-h\" onClick={(e) => this.menuClick(e,'setting')}></i></div> */}\n                    <div className=\"pageName\"><span>Notebook</span></div>\n                    <div><i className={`fa fa-circle fa-circle-small black ${(this.props.color === '#000000' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '5', '#000000')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small red ${(this.props.color === '#F00' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '5', '#F00')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small green ${(this.props.color === '#0F0' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '5', '#0F0')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small blue ${(this.props.color === '#00F' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '5', '#00F')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big cyan ${(this.props.color === '#009999' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '30', '#009999')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big orang ${(this.props.color === '#ff6600' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '30', '#ff6600')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big yellow ${(this.props.color === '#FFFF00' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e, '30', '#FFFF00')}></i></div>\n                    <div className=\"toolList\">\n                        <span className=\"size-span\">{this.props.size}</span>\n                        <ul>\n                            <li><input type=\"range\" value={this.props.size} className=\"size-picker\" min=\"1\" max=\"50\" onChange={(e) => this.setSize(e)}/></li>\n                        </ul>\n                    </div>\n                    <div>\n                        <input className=\"color-picker\" style={{ color: this.props.color }} type=\"color\" value={this.props.color} onChange={(e) => this.setColor(e)}/>\n                    </div>\n                    <div className=\"toolList\">\n                        <i className={`fa ${this.state.brushClass}`}></i>\n                        <ul>\n                            <li><i className=\"fa fa-pen\" onClick={(e) => this.setBrushType(e, 'pen')}></i><div>Pen</div></li>\n                            <li><i className=\"fa fa-pencil-alt\" onClick={(e) => this.setBrushType(e, 'pencil')}></i><div>Pencil</div></li>\n                            <li><i className=\"fa fa-paint-brush\" onClick={(e) => this.setBrushType(e, 'brush')}></i><div>Brush</div></li>\n                            <li><i className=\"fa fa-highlighter\" onClick={(e) => this.setBrushType(e, 'highlighter')}></i><div>Highlighter</div></li>\n                        </ul>\n                    </div>\n                    <div><i className=\"fa fa-eraser\" onClick={(e) => this.menuClick(e, 'eraser')}></i></div>\n                    <div><i className=\"fa fa-object-group\" onClick={(e) => this.menuClick(e, 'select-area')}></i></div>\n                </div>\n            </div>\n\n        );\n    }\n}\n","import React from 'react';\n\nexport default class ImageUploadComponent extends React.Component {\n    render () {\n        return (<div className=\"upload-file\">\n            <input id=\"canvasBackgroundImage\" onChange={(e) => this.props.setCurrentState({ BGImage: e })} type=\"file\" accept=\"image/*\" className=\"hide\"/>\n            <label htmlFor=\"canvasBackgroundImage\">Select Image</label>\n        </div>);\n    }\n}\n","import React from 'react';\n\nexport default class ImportJsonComponent extends React.Component {\n    render () {\n        return (<div className=\"upload-file\">\n            <input id=\"importJsonInput\" onChange={(e) => this.props.setCurrentState({ importJson: e })} type=\"file\" accept=\"application/JSON\" className=\"hide\"/>\n            <label htmlFor=\"importJsonInput\">Select JSON file</label>\n        </div>);\n    }\n}\n","import React from 'react';\n\nexport default class customModalComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        this.close = this.close.bind(this);\n    }\n\n    close (e) {\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n        if (e.target.classList.contains('model-box')) {\n            this.props.closeCallBack(null);\n        }\n    }\n\n    render () {\n        if (this.props.show) {\n            return (<div className='model-box' onClick={(e) => this.close(e)}>\n                <div className=\"model-box-body\">\n                    {this.props.children}\n                </div>\n            </div>);\n        } else {\n            return '';\n        }\n    }\n}\n","import React from 'react';\n\nexport default class ConfirmBoxComponent extends React.Component {\n    render () {\n        return (<div className=\"\">\n            <div>{(this.props.messgae) ? this.props.messgae : 'Message here'}</div>\n            <div>\n                <button onClick={this.props.button1CallBack ? this.props.button1CallBack : () => {}}>\n                    {this.props.button1 ? this.props.button1 : 'OK'}\n                </button>\n                {\n                    (this.props.button2) && <button onClick={this.props.button2Callback ? this.props.button2Callback : () => {} }>\n                        {this.props.button2 }\n                    </button>\n                }\n            </div>\n        </div>);\n    }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport FabricComponent from './component/fabric-component';\nimport MainMenuComponent from './component/main-menu-component';\nimport ImageUploadComponent from './component/image-upload-component';\nimport ImportJsonComponent from './component/import-json-component';\nimport CustomModalComponent from './component/custom-modal-component';\nimport ConfirmBoxComponent from './component/confirm-box-component';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { canvas: null, color: '#000000', size: 5, brushType: 'pen', canvasBackground: 'ruled', BGImage: '', showImageUploadBox: false, drawingCanvasRef: null, action: null, saveConfirmFlag: false, importJsonFlag: false, importJson: null };\n\n        this.setCurrentState = this.setCurrentState.bind(this);\n        this.setCanvas = this.setCanvas.bind(this);\n        this.oldCanvasBackground = { image: '', type: 'ruled' };\n    }\n\n    setCanvas (canvas, done) {\n        this.setState({\n            canvas\n        }, () => {\n            done(this.state.canvas);\n        });\n    }\n\n    setCurrentState (param) {\n        if (param) {\n            if (param.action) {\n                this.setState({ saveConfirmFlag: false, action: null });\n                switch (param.action) {\n                case 'new-confirm':\n                    this.setState({ saveConfirmFlag: true });\n                    break;\n                case 'new':\n                    this.setState({ action: 'new', saveConfirmFlag: false });\n                    break;\n                case 'open':\n                    this.setState({ importJsonFlag: true });\n                    break;\n                case 'cancel-save':\n                    this.setState({ action: null, saveConfirmFlag: false });\n                    break;\n                default:\n                    this.setState(param);\n                }\n            } else if (param.importJson) {\n                if (param.importJson && param.importJson.target && param.importJson.target.files) {\n                    this.setState({ importJson: param.importJson.target.files[0], importJsonFlag: false, action: 'open' });\n                } else {\n                    this.setState({ importJsonFlag: false });\n                }\n            } else if (param.canvasBackground) {\n                this.oldCanvasBackground.type = this.state.canvasBackground;\n                this.setState(param);\n                if (param.canvasBackground === 'image') {\n                    this.setState({ showImageUploadBox: true });\n                } else {\n                    this.setState({ BGImage: null });\n                }\n            } else if (param.BGImage) {\n                this.oldCanvasBackground.image = this.state.BGImage;\n                if (param.BGImage && param.BGImage.target && param.BGImage.target.files) {\n                    this.setState({ BGImage: URL.createObjectURL(param.BGImage.target.files[0]), showImageUploadBox: false });\n                } else {\n                    this.setState({ BGImage: this.oldCanvasBackground.image, canvasBackground: this.oldCanvasBackground.type, showImageUploadBox: false });\n                }\n            } else {\n                console.log(param);\n                this.setState(param);\n            }\n        }\n    }\n\n    checkCanvasUpdated () {\n        return (this.state.canvas && this.state.canvas.getObjects().length > 1);\n    }\n\n    render () {\n        return (<div className=\"main-container\">\n            <MainMenuComponent setCurrentState = {this.setCurrentState}\n                canvasBackground={this.state.canvasBackground}\n                drawingCanvasRef = {this.state.drawingCanvasRef}\n                color={this.state.color}\n                size={this.state.size}\n            />\n\n            <FabricComponent setCanvas={this.setCanvas}\n                setCurrentState = {this.setCurrentState}\n                canvas={this.state.canvas}\n                color={this.state.color}\n                size={this.state.size}\n                brushType = {this.state.brushType}\n                canvasBackground={this.state.canvasBackground}\n                currentBGImage = {this.state.BGImage}\n                action = {this.state.action}\n                brushType = {this.state.brushType}\n                canvasBackground={this.state.canvasBackground}\n                BGImage = {this.state.BGImage}\n                action = {this.state.action}\n                importJson = {this.state.importJson}\n            />\n\n            <CustomModalComponent show={this.state.showImageUploadBox} closeCallBack = {(param) => this.setCurrentState({ showImageUploadBox: param })}>\n                <ImageUploadComponent setCurrentState = {this.setCurrentState}/>\n            </CustomModalComponent>\n\n            <CustomModalComponent show={this.state.importJsonFlag} closeCallBack = {(param) => this.setCurrentState({ importJsonFlag: param })}>\n                <ImportJsonComponent setCurrentState = {this.setCurrentState}/>\n            </CustomModalComponent>\n\n            <CustomModalComponent show={this.state.saveConfirmFlag} closeCallBack = {() => this.setCurrentState({ saveConfirmFlag: false })}>\n                <ConfirmBoxComponent messgae=\"Do you want to clear all the changes?\" button1=\"Yes\" button2=\"No\" button1CallBack={() => this.setCurrentState({ action: 'new' })} button2Callback={() => this.setCurrentState({ action: 'cancel-save' })} />\n            </CustomModalComponent>\n        </div>);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW (swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister () {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}