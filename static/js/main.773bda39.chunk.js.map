{"version":3,"sources":["lib/fabric-brush.js","lib/fabric-mouse-cursor.js","lib/fabric-undo-redo.js","component/fabric-component.js","component/main-menu-component.js","component/image-upload-component.js","component/custom-modal-component.js","App.js","serviceWorker.js","index.js"],"names":["FabricBrush","options","canvas","_setBrushType","brushType","_setColor","color","_setSize","size","brush","this","_getBrushProp","freeDrawingBrush","fabric","width","parseInt","shadow","Shadow","blur","offsetX","offsetY","affectStroke","setColorSize","cursor","_setMouseHandler","on","e","_createCursor","pointer","_showCursor","_removeCursor","Circle","left","x","top","y","radius","stroke","strokeWidth","fill","customName","hasControls","hasBorders","selectable","add","setActiveObject","getObjects","forEach","obj","remove","renderAll","setCoords","fabricUndoRedo","redoArray","type","_undo","_redo","object","length","lastObject","_setRedoArray","pop","push","FabricComponent","props","fabricBrush","drawingCanvasRef","React","createRef","setCanvas","Canvas","isDrawingMode","backgroundColor","freeDrawingCursor","setDimensions","height","cssOnly","getBrush","FabricUndoRedo","passRef","current","setColorSizeBrush","action","currrentBGImageStyle","currentBGImage","background","backgroundSize","ref","className","canvasBackground","style","id","Component","MainMenuComponent","state","menuClick","bind","setColorAndSize","setBrushType","setCurrentColor","setCurrentSize","setCanvasBackground","setCurrentAction","target","value","brushClass","setState","setCurrentBrushType","setCurrentCanvasBackground","html2canvas","allowTaint","foreignObjectRendering","useCORS","then","link","document","createElement","download","href","toDataURL","click","onClick","save","min","max","onChange","ImageUploadComponent","imageSelected","setCurrentBGImage","URL","createObjectURL","files","accept","htmlFor","customModalComponent","close","stopPropagation","nativeEvent","stopImmediatePropagation","classList","contains","closeCallBack","show","children","App","currentColor","currentSize","currentBrushType","currentCanvasBackground","showImageUploadBox","currentAction","oldCanvasBackground","image","done","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.773bda39.chunk.js","sourcesContent":["import {fabric} from 'fabric';\nimport fabricMouseCursor from './fabric-mouse-cursor';\n\nexport default class FabricBrush extends fabricMouseCursor{\n    constructor(options){ \n        super(options);  \n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this._setBrushType(options.brushType);\n        this._setColor(options.color);\n        this._setSize(options.size);        \n    }\n\n    getBrush(){\n        let brush = this._getBrushProp();\n        this.options.canvas.freeDrawingBrush = new fabric[brush.brushType](this.options.canvas);\n        \n        this.options.canvas.freeDrawingBrush.color = brush.color;\n        this.options.canvas.freeDrawingBrush.width = parseInt(this.options.size, 10) || 1;\n        this.options.canvas.freeDrawingBrush.shadow = new fabric.Shadow({\n            blur: parseInt(brush.blur, 10) || 0,\n            offsetX: 0,\n            offsetY: 0,\n            affectStroke: true,\n            color: brush.color,\n        });\n    }\n\n    _setColor(color){\n        this.options.color = (color) ? color : '#000000';\n    }\n\n    _setSize(size){\n        this.options.size = (size) ? parseInt(size) : 5;\n    }\n    \n    _setBrushType(brushType){\n        this.options.brushType = (brushType) ? brushType : 'pen';\n    }\n\n    setColorSizeBrush(color, size, brushType){\n        this._setColor(color);\n        this._setSize(size);\n        this._setBrushType(brushType);\n        this.setColorSize(color, size);\n    }\n\n    _getBrushProp(){\n        /*\"BaseBrush\", \"PencilBrush\", \"CircleBrush\", \"SprayBrush\", \"PatternBrush\"*/\n        let brush = {};\n        switch(this.options.brushType){\n            case 'pen':\n                brush = {brushType : \"PencilBrush\", blur : 5, color : this.options.color};\n                break;\n            case 'pencil':\n                brush = {brushType : \"PencilBrush\", blur : 0, color : this.options.color};\n                break;\n            case 'brush':\n                brush = {brushType : \"SprayBrush\", blur : 10, color : this.options.color};\n                break;\n            case 'highlighter':\n                brush = {brushType : \"PencilBrush\", blur : 2, color : this.options.color+'aa'};\n                break;\n            default:\n                brush = {brushType : \"PencilBrush\", blur : 1, color : this.options.color};\n        }\n        return brush;\n    }\n}","import {fabric} from 'fabric';\n\nexport default class fabricMouseCursor {\n    constructor(options){  \n        this.cursor = null; \n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this._setColor(options.color);\n        this._setSize(options.size);\n        this._setMouseHandler();\n        \n    }\n\n    _setColor(color){\n        this.options.color = (color) ? color : '#000000';\n    }\n\n    _setSize(size){\n        this.options.size = (size) ? parseInt(size) : 5;\n    }\n\n    setColorSize(color, size){\n        this._setColor(color);\n        this._setSize(size);\n    }\n\n    _setMouseHandler(){\n        this.options.canvas.on(\"mouse:move\", (e) =>{\n            this._createCursor(e.pointer);\n            this._showCursor(e.pointer);\n        });\n        this.options.canvas.on(\"mouse:out\", (e) =>{\n            this._removeCursor(e.pointer);\n        });\n    }\n\n    _createCursor(pointer){\n        if(pointer && this.cursor === null){\n            this.cursor = new fabric.Circle({\n                left:pointer.x - this.options.size/2,\n                top:pointer.y - this.options.size/2,                \n                radius:this.options.size/2,\n                stroke:this.options.color,\n                strokeWidth:0,\n                fill:this.options.color,\n                customName : 'customMouseCursor',\n                hasControls : false,\n                hasBorders : false,\n                selectable : false\n            });\n            this.options.canvas.add(this.cursor).setActiveObject();\n        }\n        \n    }\n\n    _removeCursor(){\n        this.options.canvas.getObjects().forEach((obj) =>{\n            if(obj.customName === 'customMouseCursor'){\n                this.options.canvas.remove(obj);\n                this.options.canvas.renderAll();\n                this.cursor = null;\n            }\n        });\n    }\n    _showCursor(pointer){\n        this.cursor.left = pointer.x- this.options.size/2;\n        this.cursor.top = pointer.y - this.options.size/2;\n        this.cursor.setCoords();\n        this.options.canvas.renderAll();\n    }\n}","export default class fabricUndoRedo {\n    constructor(options){  \n        this.cursor = null; \n        this.options = {};\n        this.options.canvas = (options.canvas) ? options.canvas : null;\n        this.redoArray = [];\n    }\n\n    action(type){\n        if(type === 'undo'){\n            this._undo();\n        } else if(type === 'redo'){\n            this._redo();\n        }\n\n    }\n\n    _undo(){\n        let object = this.options.canvas.getObjects();\n        if(object && object.length){\n            let lastObject = object[object.length-1];\n            this._setRedoArray(lastObject);\n            this.options.canvas.remove(lastObject);\n        }\n        \n    }\n\n    _redo(){\n        if(this.redoArray && this.redoArray.length){\n            this.options.canvas.add(this.redoArray.pop());\n            this.options.canvas.renderAll();\n        }\n    }\n\n    _setRedoArray(object){\n        this.redoArray.push(object);\n    }\n}","import React from \"react\";\nimport {fabric} from 'fabric';\nimport FabricBrush from '../lib/fabric-brush';\nimport FabricUndoRedo from '../lib/fabric-undo-redo';\n\nexport default class FabricComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.fabricBrush = null;\n        this.fabricUndoRedo = null;\n        this.drawingCanvasRef = React.createRef();\n    }\n    \n    componentDidMount(){\n        this.props.setCanvas(new fabric.Canvas('fabricCanvas', {\n            isDrawingMode: true,\n            backgroundColor: \"transparent\",\n            freeDrawingCursor : 'none'\n        }),(canvas) =>{\n           canvas.setDimensions({width: '97vw', height: '101vh'}, {cssOnly: true});\n           this.fabricBrush = new FabricBrush({\n                canvas : canvas,\n                color : this.props.color,\n                size: this.props.size,\n                brushType: this.props.brushType\n            });\n            this.fabricBrush.getBrush();\n            this.fabricUndoRedo = new FabricUndoRedo({canvas : canvas});\n        });\n        this.props.passRef(this.drawingCanvasRef.current);\n    }\n\n    componentDidUpdate(){\n        let color = this.props.color;\n        let size = this.props.size;\n        let brushType = this.props.brushType;\n        if(this.fabricBrush){\n            this.fabricBrush.setColorSizeBrush(color, size, brushType);\n            this.fabricBrush.getBrush();\n        }\n        if(this.fabricUndoRedo){\n            this.fabricUndoRedo.action(this.props.action);\n        }\n        \n    }\n\n    render(){\n        let currrentBGImageStyle = {};\n        if(this.props.currentBGImage){\n            currrentBGImageStyle.background = `url('${this.props.currentBGImage}') no-repeat center center`;\n            currrentBGImageStyle.backgroundSize = 'contain';\n        }\n        return(\n            <div ref={this.drawingCanvasRef} className={`drawing-canvas-main ${this.props.canvasBackground}`} style={currrentBGImageStyle}>\n                <canvas id=\"fabricCanvas\" width={'600'} height={'600'}></canvas>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport html2canvas from 'html2canvas';\n\nexport default class MainMenuComponent extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state = {\"brushClass\" : 'fa-pen'};\n        this.menuClick = this.menuClick.bind(this);\n        this.setColorAndSize = this.setColorAndSize.bind(this);\n        this.setBrushType = this.setBrushType.bind(this);        \n        this.setCurrentColor = this.setCurrentColor.bind(this);        \n        this.setCurrentSize = this.setCurrentSize.bind(this);\n        this.setCanvasBackground = this.setCanvasBackground.bind(this);\n    }\n\n    menuClick(e,type){\n        this.props.setCurrentAction(type);\n    }    \n\n    setColorAndSize(e,size,color){\n        this.props.setCurrentColor(color);        \n        this.props.setCurrentSize(size);\n    }\n\n    setCurrentSize(e){             \n        this.props.setCurrentSize(e.target.value);\n    }\n\n    setCurrentColor(e){\n        this.props.setCurrentColor(e.target.value); \n    }\n\n    setBrushType(e,brush){\n        let brushClass = 'fa-pen';\n        switch(brush){\n            case 'pencil':\n                brushClass = 'fa-pencil-alt';\n                break;\n            case 'brush':\n                brushClass = 'fa-paint-brush';\n                break;               \n            case 'highlighter':\n                brushClass = 'fa-highlighter';                   \n                break;\n            default:\n                brushClass = 'fa-pen';\n        }\n        this.setState({brushClass});\n        this.props.setCurrentBrushType(brush);\n    }\n\n    setCanvasBackground(e,canvasBackground){\n        this.props.setCurrentCanvasBackground(canvasBackground);\n    }\n\n    save(){\n            html2canvas(this.props.drawingCanvasRef,\n                {\n                    allowTaint : true,\n                    foreignObjectRendering : true,\n                    useCORS: true,\n                    backgroundColor: null\n                })\n                .then((canvas)=>{\n                let link = document.createElement(\"a\");\n                    link.download = \"Notebook.png\";\n                    link.href = canvas.toDataURL(\"image/png\");\n                    link.click();\n            });/*, {\n                onrendered: function (canvas) {\n                    let myImage = canvas.toDataURL(\"image/png\");\n                    console.log(myImage);\n                    \n                }\n            });*/\n    }\n\n    render(){\n        return(\n            <div className=\"main-menu-container\">\n                <div className=\"main-menu\">\n                    <div className=\"toolList\">\n                        <i className=\"fa fa-bars\"></i>\n                        <ul>\n                            <li><i className={`paper-white-icon ${(this.props.canvasBackground === 'white')? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e,'white')}></i><div>White paper</div></li>\n                            <li><i className={`paper-ruled-icon ${(this.props.canvasBackground === 'ruled') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e,'ruled')}></i><div>Ruled paper</div></li>\n                            <li><i className={`paper-landscape-icon ${(this.props.canvasBackground === 'landscape') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e,'landscape')}></i><div>Landscape paper</div></li>\n                            <li><i className={`paper-gird-icon ${(this.props.canvasBackground === 'gird') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e,'grid')}></i><div>Grid paper</div></li>\n                            <li><i className={`fa fa-image ${(this.props.canvasBackground === 'image') ? 'paper-active' : ''}`} onClick={(e) => this.setCanvasBackground(e,'image')}></i><div>Custom Image</div></li>\n                        </ul>\n                    </div>\n                    <div><i className=\"fa fa-save\" onClick={(e) => this.save(e,'save')}></i></div>\n                    <div><i className=\"fa fa-undo\" onClick={(e) => this.menuClick(e,'undo')}></i></div>\n                    <div><i className=\"fa fa-redo\" onClick={(e) => this.menuClick(e,'redo')}></i></div>\n                    {/* <div><i className=\"fa fa-paste\" onClick={(e) => this.menuClick(e,'paste')}></i></div> */}\n                    <div><i className=\"fa fa-file\" onClick={(e) => this.menuClick(e,'new')}></i></div>\n                    <div><i className=\"fa fa-sliders-h\" onClick={(e) => this.menuClick(e,'setting')}></i></div>\n                    <div className=\"pageName\"><span>Name</span></div>\n                    <div><i className={`fa fa-circle fa-circle-small black ${(this.props.color === '#000000' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#000000')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small red ${(this.props.color === '#F00' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#F00')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small green ${(this.props.color === '#0F0' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#0F0')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-small blue ${(this.props.color === '#00F' && this.props.size === '5') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'5','#00F')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big cyan ${(this.props.color === '#009999' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#009999')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big orang ${(this.props.color === '#ff6600' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#ff6600')}></i></div>\n                    <div><i className={`fa fa-circle fa-circle-big yellow ${(this.props.color === '#FFFF00' && this.props.size === '30') ? 'active' : ''}`} onClick={(e) => this.setColorAndSize(e,'30','#FFFF00')}></i></div>\n                    <div className=\"toolList\">\n                        <span className=\"size-span\">{this.props.size}</span>\n                        <ul>\n                            <li><input type=\"range\" value={this.props.size} className=\"size-picker\" min=\"1\" max=\"50\" onChange={(e) => this.setCurrentSize(e)}/></li>\n                        </ul>\n                    </div>\n                    <div>\n                        <input className=\"color-picker\"  style={{color:this.props.color}} type=\"color\" value={this.props.color}  onChange={(e) => this.setCurrentColor(e)}/>\n                    </div>\n                    <div className=\"toolList\">\n                        <i className={`fa ${this.state.brushClass}`}></i>\n                        <ul>\n                            <li><i className=\"fa fa-pen\" onClick={(e) => this.setBrushType(e,'pen')}></i><div>Pen</div></li>\n                            <li><i className=\"fa fa-pencil-alt\" onClick={(e) => this.setBrushType(e,'pencil')}></i><div>Pencil</div></li>\n                            <li><i className=\"fa fa-paint-brush\" onClick={(e) => this.setBrushType(e,'brush')}></i><div>Brush</div></li>\n                            <li><i className=\"fa fa-highlighter\" onClick={(e) => this.setBrushType(e,'highlighter')}></i><div>Highlighter</div></li>\n                        </ul>\n                    </div>\n                    <div><i className=\"fa fa-eraser\" onClick={(e) => this.menuClick(e,'eraser')}></i></div>\n                    <div><i className=\"fa fa-object-group\" onClick={(e) => this.menuClick(e,'select-area')}></i></div>\n                    </div>\n            </div>\n            \n        );\n    }\n}","import React from \"react\";\n\n\n\nexport default class ImageUploadComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.imageSelected = this.imageSelected.bind(this);\n    }\n    imageSelected(e){\n        this.props.setCurrentBGImage(URL.createObjectURL(e.target.files[0]));\n    }\n    render(){\n        return (<div className=\"upload-file\">\n                    <input id=\"canvasBackgroundImage\" onChange={(e) => this.imageSelected(e)} type=\"file\" accept=\"image/*\" className=\"hide\"/>\n                    <label htmlFor=\"canvasBackgroundImage\">Select Image</label>\n                </div>)\n    }\n}","import React from 'react';\n\nexport default class customModalComponent extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.close = this.close.bind(this);\n    }\n\n    close(e){\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n        if (e.target.classList.contains('model-box')) {\n            this.props.closeCallBack(null);\n        }\n    }\n\n    render() {\n        if(this.props.show){\n            return (<div className='model-box' onClick={(e) => this.close(e)}>\n                <div className=\"model-box-body\">\n                    {this.props.children}\n                </div>\n            </div> );\n        } else {\n            return '';\n        }\n        \n    }\n    \n}","import React from 'react';\nimport './App.scss';\n\n\nimport FabricComponent from './component/fabric-component';\nimport MainMenuComponent from './component/main-menu-component';\nimport ImageUploadComponent from './component/image-upload-component';\nimport CustomModalComponent from './component/custom-modal-component';\n\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {canvas : null, currentColor : '#000000', currentSize : 5,  currentBrushType : 'pen', currentCanvasBackground : 'ruled', currentBGImage:'',showImageUploadBox : false, drawingCanvasRef : null,currentAction : null };\n    this.setCanvas = this.setCanvas.bind(this);\n    this.setCurrentBrushType = this.setCurrentBrushType.bind(this);\n    this.setCurrentSize = this.setCurrentSize.bind(this);\n    this.setCurrentColor = this.setCurrentColor.bind(this);\n    this.setCurrentCanvasBackground = this.setCurrentCanvasBackground.bind(this);\n    this.setCurrentBGImage = this.setCurrentBGImage.bind(this);\n    this.passRef = this.passRef.bind(this);\n    this.setCurrentAction = this.setCurrentAction.bind(this);\n    this.oldCanvasBackground = {image:'',type:'ruled'};\n  }\n\n  setCanvas(canvas,done){\n    this.setState({\n      canvas\n    }, () =>{\n      done(this.state.canvas);\n    });\n  }\n\n  setCurrentBrushType(currentBrushType){\n    this.setState({currentBrushType});\n  }\n\n  setCurrentColor(currentColor){\n    this.setState({currentColor});\n  }\n  \n  setCurrentSize(currentSize){\n    this.setState({currentSize});\n  }\n  \n  setCurrentCanvasBackground(currentCanvasBackground){\n    this.oldCanvasBackground.type = this.state.currentCanvasBackground;\n    this.setState({currentCanvasBackground});\n    if(currentCanvasBackground  === 'image'){\n      this.setState({showImageUploadBox : true});\n    }\n  }\n\n  setCurrentBGImage(currentBGImage){\n    this.oldCanvasBackground.image = this.state.currentBGImage;\n    if(currentBGImage){\n      this.setState({currentBGImage, showImageUploadBox:false});\n    } else {\n      this.setState({currentBGImage:this.oldCanvasBackground.image,currentCanvasBackground:this.oldCanvasBackground.type, showImageUploadBox:false});\n    }\n    \n  }\n\n\n\n  passRef(drawingCanvasRef){\n    this.setState({drawingCanvasRef});\n  }\n\n  setCurrentAction(currentAction){\n    this.setState({currentAction});\n  }\n\n  render(){\n    return (<div className=\"main-container\">\n      <MainMenuComponent  setCurrentBrushType = {this.setCurrentBrushType} \n                          setCurrentSize = {this.setCurrentSize} \n                          setCurrentColor = {this.setCurrentColor}\n                          setCurrentCanvasBackground = {this.setCurrentCanvasBackground}\n                          setCurrentAction = {this.setCurrentAction}\n                          color={this.state.currentColor}\n                          size={this.state.currentSize}\n                          canvasBackground={this.state.currentCanvasBackground}\n                          drawingCanvasRef = {this.state.drawingCanvasRef}\n\n      />\n      <FabricComponent  setCanvas={this.setCanvas} \n                        canvas={this.state.canvas} \n                        color={this.state.currentColor} \n                        size={this.state.currentSize} \n                        brushType = {this.state.currentBrushType}\n                        canvasBackground={this.state.currentCanvasBackground}\n                        currentBGImage = {this.state.currentBGImage}\n                        passRef = {this.passRef}\n                        action = {this.state.currentAction}\n      />\n      <CustomModalComponent show={this.state.showImageUploadBox} closeCallBack = {this.setCurrentBGImage}>\n        <ImageUploadComponent  setCurrentBGImage = {this.setCurrentBGImage}/>\n      </CustomModalComponent>\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}